{"version":3,"sources":["./src/app/core/language.service.ts","./src/app/shared/directives/must-match.validator.ts","./node_modules/@ionic/core/dist/esm/theme-ff3fc52f.js","./src/app/core/service-provider.service.ts","./node_modules/@ionic/core/dist/esm/button-active-4927a4c1.js","./node_modules/@ionic/core/dist/esm/framework-delegate-4392cd63.js","./src/app/core/appointment.service.ts","./node_modules/@ionic/core/dist/esm/spinner-configs-cd7845af.js","./src/app/core/pet.service.ts","./node_modules/@ionic/core/dist/esm/haptic-27b3f981.js","./src/app/core/market.service.ts","./src/app/core/cart.service.ts","./src/app/signup/dog-breed.ts","./src/app/signup/cat-breed.ts"],"names":[],"mappings":"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","file":"common.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class LanguageService {\r\n  languages = [\r\n    { name: 'English', code: 'en', icon: 'assets/svg/us.svg' },\r\n    { name: 'Portuguese', code: 'pt', icon: 'assets/svg/pt.svg' },\r\n  ];\r\n  constructor(private translate: TranslateService) {}\r\n\r\n  useLanguage(language: string): void {\r\n    this.translate.use(language);\r\n  }\r\n}\r\n","import { FormGroup } from '@angular/forms';\r\n\r\n// custom validator to check that two fields match\r\nexport function MustMatch(controlName: string, matchingControlName: string) {\r\n  return (formGroup: FormGroup) => {\r\n    const control = formGroup.controls[controlName];\r\n    const matchingControl = formGroup.controls[matchingControlName];\r\n\r\n    if (matchingControl.errors && !matchingControl.errors.mustMatch) {\r\n      // return if another validator has already found an error on the matchingControl\r\n      return;\r\n    }\r\n\r\n    // set error on matchingControl if validation fails\r\n    if (control.value !== matchingControl.value) {\r\n      matchingControl.setErrors({ mustMatch: true });\r\n    } else {\r\n      matchingControl.setErrors(null);\r\n    }\r\n  };\r\n}\r\n","const hostContext = (selector, el) => {\n  return el.closest(selector) !== null;\n};\n/**\n * Create the mode and color classes for the component based on the classes passed in\n */\nconst createColorClasses = (color, cssClassMap) => {\n  return (typeof color === 'string' && color.length > 0) ? Object.assign({ 'ion-color': true, [`ion-color-${color}`]: true }, cssClassMap) : cssClassMap;\n};\nconst getClassList = (classes) => {\n  if (classes !== undefined) {\n    const array = Array.isArray(classes) ? classes : classes.split(' ');\n    return array\n      .filter(c => c != null)\n      .map(c => c.trim())\n      .filter(c => c !== '');\n  }\n  return [];\n};\nconst getClassMap = (classes) => {\n  const map = {};\n  getClassList(classes).forEach(c => map[c] = true);\n  return map;\n};\nconst SCHEME = /^[a-z][a-z0-9+\\-.]*:/;\nconst openURL = async (url, ev, direction, animation) => {\n  if (url != null && url[0] !== '#' && !SCHEME.test(url)) {\n    const router = document.querySelector('ion-router');\n    if (router) {\n      if (ev != null) {\n        ev.preventDefault();\n      }\n      return router.push(url, direction, animation);\n    }\n  }\n  return false;\n};\n\nexport { createColorClasses as c, getClassMap as g, hostContext as h, openURL as o };\n","import { HttpBackend, HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { of } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { environment } from 'src/environments/environment';\r\nimport { UtilityService } from './utility.service';\r\nimport * as moment from 'moment';\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ServiceProviderService {\r\n  baseUrl = environment.apiUrl + 'service/';\r\n  servicesOfProvider = this.baseUrl + 'getServicesOfProvider';\r\n  providers = this.baseUrl + 'getServicesById?serviceId={serviceId}';\r\n  singleProvider = this.baseUrl + 'getSingleServiceProvider?id={id}';\r\n  serviceCategory = environment.apiUrl + 'service-category/get';\r\n  serviceCatList1 = environment.apiUrl + 'service/' + 'listServiceCategoryData';\r\n  slots = this.baseUrl + 'getSlots';\r\n\r\n  headers;\r\n  constructor(\r\n    private http: HttpClient,\r\n    private bHttp: HttpBackend,\r\n    private utilityService: UtilityService\r\n  ) {\r\n    this.headers = new HttpHeaders({\r\n      authorization: this.utilityService.getToken(),\r\n    });\r\n  }\r\n\r\n  getServiceByCategoryId(id) {\r\n    let url = this.providers.replace('{serviceId}', id);\r\n    return this.http.get(url).pipe(\r\n      map((resp) => {\r\n        let data = resp['data'];\r\n        return data;\r\n      })\r\n    );\r\n  }\r\n\r\n  getServiceProvider(cat) {\r\n    return of(1, 2, 3);\r\n  }\r\n\r\n  getServicesOfProvider(id) {\r\n    //let url = this.servicesOfProvider;\r\n    let url = this.baseUrl + '/list/' + id;\r\n    return this.http.get(url).pipe(\r\n      map((resp) => {\r\n        let data = resp['data'];\r\n        return data;\r\n      })\r\n    );\r\n  }\r\n\r\n  getSingleServiceProvider(id) {\r\n    let url = this.singleProvider.replace('{id}', id);\r\n    return this.http.get(url).pipe(\r\n      map((resp) => {\r\n        let data = resp['data'];\r\n        data.imageUrl = this.utilityService.getPetImageUrl(data.image);\r\n        return data;\r\n      })\r\n    );\r\n  }\r\n\r\n  getServiceCategory() {\r\n    let url = this.serviceCategory;\r\n    return this.http.get(url).pipe(\r\n      map((resp) => {\r\n        let data = resp['data'];\r\n        return data;\r\n      })\r\n    );\r\n  }\r\n\r\n  serviceCatList() {\r\n    let url = this.serviceCatList1;\r\n    console.log('url = ', url)\r\n    return this.http.get(url).pipe(\r\n      map((resp) => {\r\n        let data = resp['data'];\r\n        return data;\r\n      })\r\n    );\r\n  }\r\n\r\n  serviceUpdate(id, data) {\r\n    let newHTTP = new HttpClient(this.bHttp);\r\n\r\n    return newHTTP.post(this.baseUrl + 'updatedata/' + id, data, {\r\n      headers: this.headers,\r\n    });\r\n  }\r\n  serviceAdd(data) {\r\n\r\n\r\n    let newHTTP = new HttpClient(this.bHttp);\r\n\r\n    return newHTTP.post(this.baseUrl + '/add', data, {\r\n      headers: this.headers,\r\n    });\r\n  }\r\n\r\n  getSlots(id, date) {\r\n    let obj = {\r\n      id: id,\r\n      date: date,\r\n    };\r\n\r\n    let url = this.slots;\r\n    return this.http.post(url, obj).pipe(\r\n      map((resp) => {\r\n        let data = resp['data'];\r\n        data = data.map((v) => {\r\n          v.slot =\r\n            moment(v.time.split('-')[0]).format('HH:mm') +\r\n            ' - ' +\r\n            moment(v.time.split('-')[1]).format('HH:mm');\r\n\r\n          return v;\r\n        });\r\n        return data;\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { c as writeTask } from './index-7a8b7a1c.js';\nimport { h as hapticSelectionEnd, a as hapticSelectionStart, b as hapticSelectionChanged } from './haptic-27b3f981.js';\nimport { createGesture } from './index-f49d994d.js';\n\nconst createButtonActiveGesture = (el, isButton) => {\n  let currentTouchedButton;\n  let initialTouchedButton;\n  const activateButtonAtPoint = (x, y, hapticFeedbackFn) => {\n    if (typeof document === 'undefined') {\n      return;\n    }\n    const target = document.elementFromPoint(x, y);\n    if (!target || !isButton(target)) {\n      clearActiveButton();\n      return;\n    }\n    if (target !== currentTouchedButton) {\n      clearActiveButton();\n      setActiveButton(target, hapticFeedbackFn);\n    }\n  };\n  const setActiveButton = (button, hapticFeedbackFn) => {\n    currentTouchedButton = button;\n    if (!initialTouchedButton) {\n      initialTouchedButton = currentTouchedButton;\n    }\n    const buttonToModify = currentTouchedButton;\n    writeTask(() => buttonToModify.classList.add('ion-activated'));\n    hapticFeedbackFn();\n  };\n  const clearActiveButton = (dispatchClick = false) => {\n    if (!currentTouchedButton) {\n      return;\n    }\n    const buttonToModify = currentTouchedButton;\n    writeTask(() => buttonToModify.classList.remove('ion-activated'));\n    /**\n     * Clicking on one button, but releasing on another button\n     * does not dispatch a click event in browsers, so we\n     * need to do it manually here. Some browsers will\n     * dispatch a click if clicking on one button, dragging over\n     * another button, and releasing on the original button. In that\n     * case, we need to make sure we do not cause a double click there.\n     */\n    if (dispatchClick && initialTouchedButton !== currentTouchedButton) {\n      currentTouchedButton.click();\n    }\n    currentTouchedButton = undefined;\n  };\n  return createGesture({\n    el,\n    gestureName: 'buttonActiveDrag',\n    threshold: 0,\n    onStart: ev => activateButtonAtPoint(ev.currentX, ev.currentY, hapticSelectionStart),\n    onMove: ev => activateButtonAtPoint(ev.currentX, ev.currentY, hapticSelectionChanged),\n    onEnd: () => {\n      clearActiveButton(true);\n      hapticSelectionEnd();\n      initialTouchedButton = undefined;\n    }\n  });\n};\n\nexport { createButtonActiveGesture as c };\n","import { c as componentOnReady } from './helpers-dd7e4b7b.js';\n\nconst attachComponent = async (delegate, container, component, cssClasses, componentProps) => {\n  if (delegate) {\n    return delegate.attachViewToDom(container, component, componentProps, cssClasses);\n  }\n  if (typeof component !== 'string' && !(component instanceof HTMLElement)) {\n    throw new Error('framework delegate is missing');\n  }\n  const el = (typeof component === 'string')\n    ? container.ownerDocument && container.ownerDocument.createElement(component)\n    : component;\n  if (cssClasses) {\n    cssClasses.forEach(c => el.classList.add(c));\n  }\n  if (componentProps) {\n    Object.assign(el, componentProps);\n  }\n  container.appendChild(el);\n  await new Promise(resolve => componentOnReady(el, resolve));\n  return el;\n};\nconst detachComponent = (delegate, element) => {\n  if (element) {\n    if (delegate) {\n      const container = element.parentElement;\n      return delegate.removeViewFromDom(container, element);\n    }\n    element.remove();\n  }\n  return Promise.resolve();\n};\n\nexport { attachComponent as a, detachComponent as d };\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { map } from 'rxjs/operators';\r\nimport { environment } from 'src/environments/environment';\r\nimport * as moment from 'moment';\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AppointmentService {\r\n  baseUrl = environment.apiUrl + 'appointment/';\r\n  add = this.baseUrl + 'add';\r\n  userAppointment = this.baseUrl + 'getUserAppointments';\r\n  providerAppointment = this.baseUrl + 'getProviderAppointments';\r\n  singleAppointment = this.baseUrl + 'getSingleAppointment';\r\n  constructor(private http: HttpClient) {}\r\n\r\n  addAppointment(data) {\r\n    return this.http.post(this.add, data);\r\n  }\r\n\r\n  getUserAppointments(date) {\r\n    let obj = {\r\n      date: moment(date).format().split('T')[0],\r\n    };\r\n    return this.http.post(this.userAppointment, obj).pipe(\r\n      map((v) => {\r\n        let data = v['data'];\r\n        data = data.map((v) => {\r\n          v.start = moment(v.startTime).format('HH:mm:A');\r\n          v.end = moment(v.endTime).format('HH:mm:A');\r\n\r\n          return v;\r\n        });\r\n        return data;\r\n      })\r\n    );\r\n  }\r\n\r\n  getProviderAppointment(date) {\r\n    let obj = {\r\n      date: moment(date).format().split('T')[0],\r\n    };\r\n    return this.http.post(this.providerAppointment, obj).pipe(\r\n      map((v) => {\r\n        let data = v['data'];\r\n         data = data.map((v) => {\r\n          v.start = moment(v.startTime).format('HH:mm:A');\r\n          v.end = moment(v.endTime).format('HH:mm:A');\r\n\r\n          return v;\r\n        });\r\n        return data;\r\n      })\r\n    );\r\n  }\r\n\r\n  getSingleAppointment(id) {\r\n    return this.http.get(this.singleAppointment + '?id=' + id).pipe(\r\n      map((v) => {\r\n        let data = v['data'];\r\n        data.slot =\r\n          moment(data.startTime).format('HH:mm:A') +\r\n          ' - ' +\r\n          moment(data.endTime).format('HH:mm:A');\r\n        return data;\r\n      })\r\n    );\r\n  }\r\n}\r\n","const spinners = {\n  'bubbles': {\n    dur: 1000,\n    circles: 9,\n    fn: (dur, index, total) => {\n      const animationDelay = `${(dur * index / total) - dur}ms`;\n      const angle = 2 * Math.PI * index / total;\n      return {\n        r: 5,\n        style: {\n          'top': `${9 * Math.sin(angle)}px`,\n          'left': `${9 * Math.cos(angle)}px`,\n          'animation-delay': animationDelay,\n        }\n      };\n    }\n  },\n  'circles': {\n    dur: 1000,\n    circles: 8,\n    fn: (dur, index, total) => {\n      const step = index / total;\n      const animationDelay = `${(dur * step) - dur}ms`;\n      const angle = 2 * Math.PI * step;\n      return {\n        r: 5,\n        style: {\n          'top': `${9 * Math.sin(angle)}px`,\n          'left': `${9 * Math.cos(angle)}px`,\n          'animation-delay': animationDelay,\n        }\n      };\n    }\n  },\n  'circular': {\n    dur: 1400,\n    elmDuration: true,\n    circles: 1,\n    fn: () => {\n      return {\n        r: 20,\n        cx: 48,\n        cy: 48,\n        fill: 'none',\n        viewBox: '24 24 48 48',\n        transform: 'translate(0,0)',\n        style: {}\n      };\n    }\n  },\n  'crescent': {\n    dur: 750,\n    circles: 1,\n    fn: () => {\n      return {\n        r: 26,\n        style: {}\n      };\n    }\n  },\n  'dots': {\n    dur: 750,\n    circles: 3,\n    fn: (_, index) => {\n      const animationDelay = -(110 * index) + 'ms';\n      return {\n        r: 6,\n        style: {\n          'left': `${9 - (9 * index)}px`,\n          'animation-delay': animationDelay,\n        }\n      };\n    }\n  },\n  'lines': {\n    dur: 1000,\n    lines: 12,\n    fn: (dur, index, total) => {\n      const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\n      const animationDelay = `${(dur * index / total) - dur}ms`;\n      return {\n        y1: 17,\n        y2: 29,\n        style: {\n          'transform': transform,\n          'animation-delay': animationDelay,\n        }\n      };\n    }\n  },\n  'lines-small': {\n    dur: 1000,\n    lines: 12,\n    fn: (dur, index, total) => {\n      const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\n      const animationDelay = `${(dur * index / total) - dur}ms`;\n      return {\n        y1: 12,\n        y2: 20,\n        style: {\n          'transform': transform,\n          'animation-delay': animationDelay,\n        }\n      };\n    }\n  }\n};\nconst SPINNERS = spinners;\n\nexport { SPINNERS as S };\n","import { HttpClient, HttpHeaders, HttpBackend } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { map } from 'rxjs/operators';\r\nimport { environment } from 'src/environments/environment';\r\nimport { UtilityService } from './utility.service';\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class PetService {\r\n  baseUrl = environment.apiUrl + 'pet/';\r\n  addPet = 'add';\r\n  updatePet = 'update/{petId}';\r\n  deletePet = 'delete/{petId}';\r\n  getPets = 'get';\r\n  getSinglePet = 'get/{petId}';\r\n  headers;\r\n  constructor(\r\n    private http: HttpClient,\r\n    private utilityService: UtilityService,\r\n    private bHttp: HttpBackend\r\n  ) {\r\n    this.headers = new HttpHeaders({\r\n      authorization: this.utilityService.getToken(),\r\n    });\r\n  }\r\n\r\n  getServiceDetails(data) {\r\n    // return this.http.post(this.baseUrl + this.getServiceDetail, data);\r\n\r\n    let newHTTP = new HttpClient(this.bHttp);\r\n    return newHTTP.post(environment.apiUrl + 'service/details', data, {\r\n      headers: this.headers,\r\n    });\r\n  }\r\n\r\n  serviceAdd(data) {\r\n    // return this.http.post(this.baseUrl + this.addPet, data);\r\n\r\n    let newHTTP = new HttpClient(this.bHttp);\r\n    return newHTTP.post(environment.apiUrl + 'service/add', data, {\r\n      headers: this.headers,\r\n    });\r\n  }\r\n  serviceUpdate(id, data) {\r\n    let newHTTP = new HttpClient(this.bHttp);\r\n\r\n    this.updatePet = this.updatePet.replace('{petId}', id);\r\n    return newHTTP.patch(environment.apiUrl + 'service/update/' + id, data, {\r\n      headers: this.headers,\r\n    });\r\n  }\r\n\r\n  petAdd(data) {\r\n    // return this.http.post(this.baseUrl + this.addPet, data);\r\n\r\n    let newHTTP = new HttpClient(this.bHttp);\r\n    return newHTTP.post(this.baseUrl + this.addPet, data, {\r\n      headers: this.headers,\r\n    });\r\n  }\r\n  petUpdate(id, data) {\r\n    let newHTTP = new HttpClient(this.bHttp);\r\n\r\n    this.updatePet = this.updatePet.replace('{petId}', id);\r\n    return newHTTP.put(this.baseUrl + this.updatePet, data, {\r\n      headers: this.headers,\r\n    });\r\n  }\r\n  petGets() {\r\n    return this.http.get(this.baseUrl + this.getPets).pipe(\r\n      map((res: any) => {\r\n        console.log(res);\r\n        let data = res['data'];\r\n\r\n        data = data.map((v) => {\r\n          if (v.image) {\r\n            v.imageUrl = this.utilityService.getPetImageUrl(v.image);\r\n          } else {\r\n            v.imageUrl = 'assets/images/pet4.jpg';\r\n          }\r\n\r\n          return v;\r\n        });\r\n        return data;\r\n      })\r\n    );\r\n  }\r\n  getPetSingle(id) {\r\n    return this.http\r\n      .get(this.baseUrl + this.getSinglePet.replace('{petId}', id))\r\n      .pipe(\r\n        map((res) => {\r\n          let data = res['data'];\r\n          if (data?.image) {\r\n            data.imageUrl = this.utilityService.getPetImageUrl(data.image);\r\n          }\r\n\r\n          return data;\r\n        })\r\n      );\r\n  }\r\n  petDelete(id) {\r\n    return this.http.delete(\r\n      this.baseUrl + this.deletePet.replace('{petId}', id)\r\n    );\r\n  }\r\n}\r\n","const HapticEngine = {\n  getEngine() {\n    const win = window;\n    return (win.TapticEngine) || (win.Capacitor && win.Capacitor.isPluginAvailable('Haptics') && win.Capacitor.Plugins.Haptics);\n  },\n  available() {\n    return !!this.getEngine();\n  },\n  isCordova() {\n    return !!window.TapticEngine;\n  },\n  isCapacitor() {\n    const win = window;\n    return !!win.Capacitor;\n  },\n  impact(options) {\n    const engine = this.getEngine();\n    if (!engine) {\n      return;\n    }\n    const style = this.isCapacitor() ? options.style.toUpperCase() : options.style;\n    engine.impact({ style });\n  },\n  notification(options) {\n    const engine = this.getEngine();\n    if (!engine) {\n      return;\n    }\n    const style = this.isCapacitor() ? options.style.toUpperCase() : options.style;\n    engine.notification({ style });\n  },\n  selection() {\n    this.impact({ style: 'light' });\n  },\n  selectionStart() {\n    const engine = this.getEngine();\n    if (!engine) {\n      return;\n    }\n    if (this.isCapacitor()) {\n      engine.selectionStart();\n    }\n    else {\n      engine.gestureSelectionStart();\n    }\n  },\n  selectionChanged() {\n    const engine = this.getEngine();\n    if (!engine) {\n      return;\n    }\n    if (this.isCapacitor()) {\n      engine.selectionChanged();\n    }\n    else {\n      engine.gestureSelectionChanged();\n    }\n  },\n  selectionEnd() {\n    const engine = this.getEngine();\n    if (!engine) {\n      return;\n    }\n    if (this.isCapacitor()) {\n      engine.selectionEnd();\n    }\n    else {\n      engine.gestureSelectionEnd();\n    }\n  }\n};\n/**\n * Trigger a selection changed haptic event. Good for one-time events\n * (not for gestures)\n */\nconst hapticSelection = () => {\n  HapticEngine.selection();\n};\n/**\n * Tell the haptic engine that a gesture for a selection change is starting.\n */\nconst hapticSelectionStart = () => {\n  HapticEngine.selectionStart();\n};\n/**\n * Tell the haptic engine that a selection changed during a gesture.\n */\nconst hapticSelectionChanged = () => {\n  HapticEngine.selectionChanged();\n};\n/**\n * Tell the haptic engine we are done with a gesture. This needs to be\n * called lest resources are not properly recycled.\n */\nconst hapticSelectionEnd = () => {\n  HapticEngine.selectionEnd();\n};\n/**\n * Use this to indicate success/failure/warning to the user.\n * options should be of the type `{ style: 'light' }` (or `medium`/`heavy`)\n */\nconst hapticImpact = (options) => {\n  HapticEngine.impact(options);\n};\n\nexport { hapticSelectionStart as a, hapticSelectionChanged as b, hapticSelection as c, hapticImpact as d, hapticSelectionEnd as h };\n","import { HttpBackend, HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { map } from 'rxjs/operators';\r\nimport { environment } from 'src/environments/environment';\r\nimport { UtilityService } from './utility.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class MarketService {\r\n  baseUrl = environment.apiUrl + 'product/';\r\n  add = 'add';\r\n  update = 'update/{id}';\r\n  delete = 'delete/{id}';\r\n  getAll = 'get';\r\n  userProducts = 'getUserProducts';\r\n  getSingle = 'get/{id}';\r\n  categories = environment.apiUrl + 'category/' + 'get';\r\n  petType = environment.apiUrl + 'pet-type/get';\r\n  headers;\r\n  constructor(\r\n    private http: HttpClient,\r\n    private utilityService: UtilityService,\r\n    private bHttp: HttpBackend\r\n  ) {\r\n    this.headers = new HttpHeaders({\r\n      authorization: this.utilityService.getToken(),\r\n    });\r\n  }\r\n\r\n  productAdd(data) {\r\n    let newHTTP = new HttpClient(this.bHttp);\r\n    return newHTTP.post(this.baseUrl + this.add, data, {\r\n      headers: this.headers,\r\n    });\r\n  }\r\n  productUpdate(id, data) {\r\n    let newHTTP = new HttpClient(this.bHttp);\r\n\r\n    let url = this.baseUrl + this.update.replace('{id}', id);\r\n\r\n    // alert(url);\r\n    console.log(url);\r\n    return newHTTP.put(url, data, {\r\n      headers: this.headers,\r\n    });\r\n  }\r\n  getProducts(categoryId, page, limit) {\r\n    return this.http\r\n      .get(\r\n        this.baseUrl +\r\n          this.getAll +\r\n          '?categoryId=' +\r\n          categoryId +\r\n          '&page=' +\r\n          page +\r\n          '&limit=' +\r\n          limit\r\n      )\r\n      .pipe(\r\n        map((res: any) => {\r\n          console.log(res);\r\n          let data = res['data'];\r\n          data = data.map((v) => {\r\n            console.log(v);\r\n            v.imageUrls = this.utilityService.getImageUrl(v.images);\r\n            v.count = res['total'];\r\n            return v;\r\n          });\r\n          return data;\r\n        })\r\n      );\r\n  }\r\n\r\n  getUserProducts() {\r\n    return this.http.get(this.baseUrl + this.userProducts).pipe(\r\n      map((res: any) => {\r\n        console.log(res);\r\n        let data = res['data'];\r\n        data = data.map((v) => {\r\n          console.log(v);\r\n          v.imageUrls = this.utilityService.getImageUrl(v.images);\r\n          return v;\r\n        });\r\n        return data;\r\n      })\r\n    );\r\n  }\r\n  getCategories() {\r\n    return this.http.get(this.categories).pipe(\r\n      map((res: any) => {\r\n        console.log(res);\r\n        let data = res['data'];\r\n        return data;\r\n      })\r\n    );\r\n  }\r\n  getPetType() {\r\n    return this.http.get(this.petType).pipe(\r\n      map((res: any) => {\r\n        console.log(res);\r\n        let data = res['data'];\r\n        return data;\r\n      })\r\n    );\r\n  }\r\n  getProductSingle(id) {\r\n    return this.http\r\n      .get(this.baseUrl + this.getSingle.replace('{id}', id))\r\n      .pipe(\r\n        map((res) => {\r\n          let data = res['data'];\r\n          data.imageUrls = this.utilityService.getImageUrl(data.images);\r\n\r\n          return data;\r\n        })\r\n      );\r\n  }\r\n  productDelete(id) {\r\n    return this.http.delete(this.baseUrl + this.delete.replace('{id}', id));\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { map } from 'rxjs/operators';\r\nimport { environment } from 'src/environments/environment';\r\nimport { UtilityService } from './utility.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class CartService {\r\n  baseUrl = environment.apiUrl + 'cart/';\r\n  add = 'add';\r\n  delete = 'delete/{id}';\r\n  getAll = 'get';\r\n  clearCart = this.baseUrl + 'clearUserCart/';\r\n  placeOrder = environment.apiUrl + 'order/add';\r\n  constructor(\r\n    private http: HttpClient,\r\n    private utilityService: UtilityService\r\n  ) {}\r\n\r\n  addToCart(data) {\r\n    return this.http.post(this.baseUrl + this.add, data);\r\n  }\r\n\r\n  deleteCart(id) {\r\n    return this.http.delete(this.baseUrl + this.delete.replace('{id}', id));\r\n  }\r\n  getCart() {\r\n    return this.http.get(this.baseUrl + this.getAll).pipe(\r\n      map((res: any) => {\r\n        console.log(res);\r\n        let data = res['data'];\r\n        data = data.map((v) => {\r\n          console.log(v);\r\n          v.productId.imageUrls = this.utilityService.getImageUrl(\r\n            v.productId.images\r\n          );\r\n          return v;\r\n        });\r\n        return data;\r\n      })\r\n    );\r\n  }\r\n\r\n  saveOrder(data) {\r\n    return this.http.post(this.placeOrder, data);\r\n  }\r\n  userCartClear(id) {\r\n    return this.http.delete(this.clearCart + id);\r\n  }\r\n}\r\n","export var dog = [\r\n  'Labrador Retriever',\r\n  'English Cocker Spaniel',\r\n  'English Springer Spaniel',\r\n  'German Shepherd',\r\n  'Staffordshire Bull Terrier',\r\n  'Cavalier King Charles Spaniel',\r\n  'Golden Retriever',\r\n  'West Highland White Terrier',\r\n  'Boxer',\r\n  'Border Terrier',\r\n  'Rottweiler',\r\n  'Shih Tzu',\r\n  'Miniature Schnauzer',\r\n  'Lhasa Apso',\r\n  'Yorkshire Terrier',\r\n  'Bulldog',\r\n  'Dobermann Pinscher',\r\n  'Bull Terrier',\r\n  'Weimaraner',\r\n  'Pug',\r\n  'Whippet',\r\n  'Border Collie',\r\n  'Siberian Husky',\r\n  'Shar-Pei',\r\n  'Dalmatian',\r\n  'Great Dane',\r\n  'Cairn Terrier',\r\n  'Beagle',\r\n];\r\n","export var cat = [\r\n  'Abyssinian',\r\n  'American Shorthair',\r\n  'Balinese',\r\n  'Bengal',\r\n  'Birman',\r\n  'Bombay',\r\n  'British Shorthair',\r\n  'Devon Rex',\r\n  'European Burmese',\r\n  'Exotic',\r\n  'Maine Coon Cat',\r\n  'Manx',\r\n  'Oriental',\r\n  'Persian',\r\n  'Ragdoll',\r\n  'Siamese',\r\n  'Siberian',\r\n  'Scottish Fold',\r\n  'Sphynx',\r\n  'Turkish Angora',\r\n];\r\n"],"sourceRoot":"webpack:///"}